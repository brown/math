@begin(section)
@title(Overview)

Math is a mathematical library that implements some algorithms of linear algebra, statistics, finding approximating polynomials on Common Lisp

@end(section)

@begin(section)
 @title(Графы)
 @begin(list)
  @item(system-graph @image[src=./system-graph.gv.png]())
  @item(call-graph   @image[src=./call-graph.gv.png]())
  @item(symbol-graph @image[src=./symbol-graph.gv.png]())
  @item(class-graph  @image[src=./class-graph.gv.png]())
 @end(list)
@end(section)

@begin(section)
 @title(Преобразования_Координат) 
 @cl:with-package[name="math"](
  @cl:doc(function dtr)
  @cl:doc(function rtd)
  @cl:doc(function cartesian->polar)    
  @cl:doc(function polar->cartesian)
  @cl:doc(function cartesian->spherical)  
  @cl:doc(function spherical->cartesian))
@end(section)

@begin(section)
 @title(Статистические)
  @cl:with-package[name="math"](
   @cl:doc(function average)
   @cl:doc(function average-value)
   @cl:doc(function average-not-nil-value)
   @cl:doc(function dispersion)

   @cl:doc(function max-not-nil-value)
   @cl:doc(function min-not-nil-value)  
   @cl:doc(function max-value)
   @cl:doc(function min-value)
  
   @cl:doc(function delta-max-value)
   @cl:doc(function delta-min-value)
  
   @cl:doc(function exclude-nil-from-list)
   @cl:doc(function square)
   @cl:doc(function standard-deviation)
   @cl:doc(function variation-coefficient))
@end(section)

@begin(section)
 @title(Статистические-1)

  @cl:doc(function grubbs)
  @cl:doc(function grubbs-1)
  @cl:doc(function grubbs-2)

  @cl:doc(function make-random-value-list)

  @cl:doc(function clean-flagrant-error)
  @cl:doc(function clean-max-flagrant-error)
  @cl:doc(function clean-min-flagrant-error)
@end(section)

@begin(section)
 @title(Функции)

@begin(section)
 @title(Экспортируемые)
 @cl:with-package[name="math"](
  @cl:doc(function appr_table)
  @cl:doc(function cauchy-smoothing)
  @cl:doc(function depth-sphere-along-cone)
  @cl:doc(function exp-smoothing)
  @cl:doc(function gauss-smoothing)
  @cl:doc(function gnuplot-data-plot)
  @cl:doc(function gnuplot-data-splot)
  @cl:doc(function gnuplot-plot)
  @cl:doc(function gnuplot-splot)
  @cl:doc(function hann-smoothing)
  @cl:doc(function list-matr-append-col)
  @cl:doc(function list-matr-append-row)
  @cl:doc(function list-matr-average-col-not-nil-value)
  @cl:doc(function list-matr-average-col-value)
  @cl:doc(function list-matr-average-not-nil-value)
  @cl:doc(function list-matr-average-row-not-nil-value)
  @cl:doc(function list-matr-average-row-value)
  @cl:doc(function list-matr-average-value)
  @cl:doc(function list-matr-col)
  @cl:doc(function list-matr-cols)
  @cl:doc(function list-matr-detach-last-col)
  @cl:doc(function list-matr-get-last-col)
  @cl:doc(function list-matr-make)
  @cl:doc(function list-matr-max-col-not-nil-value)
  @cl:doc(function list-matr-max-row-not-nil-value)
  @cl:doc(function list-matr-prepend-col)
  @cl:doc(function list-matr-prepend-row)
  @cl:doc(function list-matr-print)
  @cl:doc(function list-matr-row)
  @cl:doc(function list-matr-rows)
  @cl:doc(function list-matr-transpose)
  @cl:doc(function list-matr-union)
  @cl:doc(function list-vector-print)
  @cl:doc(function make-least-squares-matrix)
  @cl:doc(function make-plot-data-file)

  @cl:doc(function make-table)
  @cl:doc(function matr-new*)
  @cl:doc(function averaging-function-body)
  @cl:doc(function averaging-function-defun)
  @cl:doc(function matr-osr-lambda*)
  @cl:doc(function solve-linear-system-rotation)

  @cl:doc(function split-range)
  @cl:doc(function split-range-by-func)

  @cl:doc(function table-apply))
@end(section)


  
@end(section)

@begin(section)
 @title(Обобщенные)
  @cl:with-package[name="math"](
   @cl:doc(generic copy)
   @cl:doc(generic dimensions)
   @cl:doc(generic rows)
   @cl:doc(generic cols)
   @cl:doc(generic squarep)
   @cl:doc(generic mref)
   @cl:doc(setf-generic mref)

   @cl:doc(generic equivalent)
   @cl:doc(generic row)
   @cl:doc(setf-generic row)
   @cl:doc(generic col)
   @cl:doc(setf-generic col)

   @cl:doc(generic main-diagonal)
   @cl:doc(setf-generic main-diagonal)   

   @cl:doc(generic anti-diagonal)
   @cl:doc(setf-generic anti-diagonal)

   @cl:doc(generic add)
   @cl:doc(generic multiply)

   @cl:doc(generic solve-linear-system-gauss)
   )
@end(section)   
