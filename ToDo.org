* Файлы проекта
#+BEGIN_SRC shell
for i in `ls *.lisp` 
do
 echo [[./${i}]]
 done
#+END_SRC

#+RESULTS:
| [[file:./appr-func-temptate.lisp]]    |
| [[file:./approximation-gnuplot.lisp]] |
| [[file:./approximation.lisp]]         |
| [[file:./approximation-test.lisp]]    |
| [[file:./array.lisp]]                 |
| [[file:./array-test.lisp]]            |
| [[file:./coordinate-system.lisp]]     |
| [[file:./gnuplot.lisp]]               |
| [[file:./las-rotation.lisp]]          |
| [[file:./list-matr.lisp]]             |
| [[file:./math.lisp]]                  |
| [[file:./matr-class.lisp]]            |
| [[file:./matr-generics.lisp]]         |
| [[file:./mult-matr-vect.lisp]]        |
| [[file:./package.lisp]]               |
| [[file:./smoothing.lisp]]             |
| [[file:./statistics.lisp]]            |
| [[file:./test.lisp]]                  |
| [[file:./x-o.lisp]]                   |
| [[file:./x-o-testing.lisp]]           |

* Задачи
1. [ ] Определить функции кубической интерполяции для функции одного переменного, заданной табличными значениями.
2. [ ] При определении коэффициентов в функции =averaging-function-body= необходимо выполнить нормализацию диапазона аргументов и значений функций.
3. [X] Определить функцию генерирующую замыкание для функции интерполяции одного переменного -- make-appr-linear.
4. [ ] Документирование
   - [ ] Аппроксимация
     - make-appr-linear
5. [ ] Рефакторинг
   - [ ] Разделить проект на отдельные части:
     - Матрицы
     - Аппроксимация
     - Матрицы в виде списков
   - [ ] matr-class.lisp - в данном файле определения функций должны в конце имени иметь "-*";
   - [ ] x-o.lisp        - файл, содержащий определение класса x-o крестики-нолики, выделить в отдельный проект.
     - [ ] matr-set-ij-* - заменить на, что-то что применяется в настоящий момент.
     - [ ] matr-rows-* - заменить на, что-то что применяется в настоящий момент.
     - [ ] matr-cols-* - заменить на, что-то что применяется в настоящий момент.
     - [ ] matr-set-row-* - заменить на, что-то что применяется в настоящий момент.
     - [ ] matr-get-row-* - заменить на, что-то что применяется в настоящий момент.
     - [ ] matr-get-col-* - заменить на, что-то что применяется в настоящий момент.
6. [3/3] Разобраться с функциями с целью исключеия какой-либо из них. [3/3]
   - [X] matr-ij (matr i j) - исключена;
   - [X] matr-set_ij (matr elem i j) - исключена;
   - [X] matr-set-ij (matr value i j) - исключена;
7. [X] Выполнить оптимизацию вычисления для функции matr-mnk за счет создания матрицы содержащей функции для аддитивного вычисления коэффициентов.  SCHEDULED: <2018-11-30 Пт>
8. [3/4] Определить класс matrix при помощи массива (array 2d) [75%]
   - [X] Файл -  [[./matr-class.lisp]]
   - [X] Класс - matrix 
   - [X] Файл -  [[./matr-class-temp.lisp]] - содержит заготовки функций, которые необходимо переделать под класс  matrix.
   - [ ] По окончании пределки функций данный файл подлежит удалению из проекта.
9. [10/10] Определить операции для класса matrix
   - [X] вывода строки, определяющией тип матрицы    -- matr-name-*  ((mm matrix));
   - [X] создания матрицы                            -- make-instance 'matrix
   - [X] инициализации матрицы                       -- initialize-instance  ((mm matrix) &key dimensions initial-element initial-contents data (element-type t));
   - [X] копирования матрицы                         -- copy  ((mm-ref matrix));
   - [X] проверка на квадратность                    -- squarep  ((mm matrix));
   - [X] определения:[100%] 
     + [X] размерностей                              -- dimensions ((mm matrix));
     + [X] количества строк                          -- rows ((mm matrix));
     + [X] количества столбцов                       -- cols ((mm matrix));
   - [X] печати                                      -- print-object ((mm matrix) s);
   - [X] извлечения: [100%] 
     + [X] элментов;                                 -- mref ((mm matrix) i j);
     + [X] строк;                                    -- row  ((mm matrix) row);
     + [X] столбцов;                                 -- col  ((mm matrix) col);
     + [X] диагонали: [100%] 
       - [X] главной                                 -- main-diagonal  ((mm matrix));
       - [X] побочной                                -- anti-diagonal  ((mm matrix));
   - [X] записи:
     + [X] элементов                                 -- (setf mref) (matrix row col);
     + [X] строки                                    -- (setf row)  (new-value-lst (mm matrix) row);
     + [X] столбца                                   -- (setf col)  (new-value-lst (mm matrix) col);
     + [X] [100%] диагонали
       - [X] главной                                 -- (setf main-diagonal) (elements (mm matrix));
       - [X] побочной                                -- (setf anti-diagonal) (elements (mm matrix));
   - [X] Опреции: [100%]
     - [X] проверки равентсва                        -- matr-equal* ((m1 matrix) (m2 matrix) &key (test #'equal));
     - [X] Сложения                                  -- matr-sum*   ((a matrix ) (b matrix));
     - [X] Умножения [100%]
       - [X] на матрицу                              -- matr-mult*  ((a matrix ) (b matrix));
       - [X] на число                                -- matr-mult*  ((a number ) (b matrix));
     - [X] транспонирования: [100%]
       - [X] транспонирования                        -- transpose   ((mm matrix));
       - [X] транспонирования                        -- transpose   ((mm cons));
     - [X] перестановки: [100%]
       + [X] строк;                                  -- swap-rows*  ((mm matrix) i j)
       + [X] строк;                                  -- swap-rows   ((mm matrix) i j)
       + [X] столбцов;                               -- swap-cols*  ((mm matrix) i j)
       + [X] столбцов;                               -- swap-cols   ((mm matrix) i j)
     - [X] Преобразования [100%]
       + [X] в matrix->2d-list                       -- matrix->2d-list ((mm matrix))
10. Определить функции тестирования для матриц
* link FiveAm

http://turtleware.eu/posts/Tutorial-Working-with-FiveAM.html

https://common-lisp.net/project/fiveam/

https://www.darkchestnut.com/2018/how-to-write-5am-test-fixtures/

* Замечания

** Аппроксимация
*** Литература
 [[\\solver\dfni$\%D0%93%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%B0\Gnuplot\Janert%20P.%20K.%20-%20Gnuplot%20in%20Action,%20Second%20Edition%20-%202016.pdf][Janert P. K. - Gnuplot in Action, Second Edition - 2016]]
 С18-С20

 Gnuplot in Action
 SECOND EDITION
 PHILIPP K. JANERT


 \[ z = \frac {\sum_i w(d_i) \cdot z_i} {\sum_i w(d_i) } \]

 \[ d_i = \sqrt { \left( \frac{x-x_i}{dx} \right)^2 + \left(\frac{y-y_i}{dy} \right)^2 } \]

  gauss    w(d) = exp(-d^2)                                   
                         
  cauchy   w(d) = 1/(1+d^2)                                                            

  exp      w(d) = exp(-d)                                                              

  box      w(d) = 1 if d < 1; w(d) = 0 otherwise                                       

  hann     w(d) = (1-cos(2πd)) if |d| < 1; w(d) = 0 otherwise 
** Установка gsll
*** 64

 #+BEGIN_SRC bash
   pacman -S mingw64/mingw-w64-x86_64-gsl
   cd /mingw64/bin
   ln -s libgsl-23.dll libgsl-0.dll
 #+END_SRC

*** 32
 #+BEGIN_SRC bash
   pacman -S mingw32/mingw-w64-i686-gsl
   cd /mingw32/bin
   ln -s libgsl-23.dll libgsl-0.dll
 #+END_SRC

 #+RESULTS:



 #+BEGIN_SRC lisp
   (defparameter *a*
    (let ((rez 1))
      (dotimes (i 30000 rez)
	(setf rez (* rez (random 1000000000000000000000000))))))

   (defparameter *b*
    (let ((rez 1))
      (dotimes (i 30000 rez)
	(setf rez (* rez (random 1000000000000000000000000))))))

   (let ((rez (* *a* *b*)))
     'done)


 #+END_SRC
** Gnuplot

*** Примеры правильного формата пути для OS Windows

 splot 'D:\\PRG\\msys32\\home\\namatv\\splot.data' u 1:2:3
 splot "D:\\PRG\\msys32\\home\\namatv\\splot.data" u 1:2:3
 splot "D:/PRG/msys32/home/namatv/splot.data" u 1:2:3
 splot 'D:/PRG/msys32/home/namatv/splot.data' u 1:2:3

** git 
*** Перечень удаленных репозиториев
  #+BEGIN_SRC bash 
  git remote
  #+END_SRC

  #+RESULTS:
  | github.com |
  | pi         |

*** Коммит
  #+BEGIN_SRC bash :results none
  DATE=`date`
  git commit -a -m "$DATE"
  #+END_SRC

*** Публикация изменений на удаленных серверах

  #+BEGIN_SRC bash :results none
  for i in github.com 
  do
  git push ${i} master
  done
  #+END_SRC

*** Получение изменений с удаленных серверов
  #+BEGIN_SRC bash :results none
  for i in github.com 
  do
  git pull ${i} master
  done
  #+END_SRC
