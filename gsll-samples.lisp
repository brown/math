(defparameter *m* '((1d0 1d0 1d0  1d0)
		    (1d0 2d0 3d0  4d0)
		    (1d0 4d0 9d0  16d0)
		    (1d0 8d0 27d0 64d0)))

(defparameter *v* '(10d0 30d0 100d0 354d0))



(MULTIPLE-VALUE-BIND (GSLL::MATRIX GSLL::PERM) (GSLL:LU-DECOMPOSITION *m*)
  (LET ((GSLL::X (GSLL:LU-SOLVE GSLL::MATRIX *v* GSLL::PERM)))
    (GRID:COPY-TO
     (GSLL:PERMUTE-INVERSE
      GSLL::PERM
      (GSLL:MATRIX-PRODUCT-TRIANGULAR
       GSLL::MATRIX
       (GSLL:MATRIX-PRODUCT-TRIANGULAR GSLL::MATRIX GSLL::X 1 :UPPER :NOTRANS :NONUNIT) 1 :LOWER :NOTRANS :UNIT)))))

(let ((GSLL::MATRIX (GRID:MAKE-FOREIGN-ARRAY 'DOUBLE-FLOAT :INITIAL-CONTENTS *m*))
      (GSLL::VEC (GRID:MAKE-FOREIGN-ARRAY 'DOUBLE-FLOAT :INITIAL-CONTENTS *v*)))
  (MULTIPLE-VALUE-BIND (GSLL::MATRIX GSLL::PERM) (GSLL:LU-DECOMPOSITION GSLL::MATRIX)
    (grid:copy-to (GSLL:LU-SOLVE GSLL::MATRIX GSLL::VEC GSLL::PERM))))



(GSLL:LU-DECOMPOSITION *m*)


(LET ((GSLL::MATRIX (GRID:MAKE-FOREIGN-ARRAY 'DOUBLE-FLOAT :INITIAL-CONTENTS '((-34.5d0 8.24d0 3.29d0 -8.93d0) (34.12d0 -6.15d0 49.27d0 -13.49d0) (32.5d0 42.73d0 -17.24d0 43.31d0) (-16.12d0 -8.25d0 21.44d0 -49.08d0))))
      (GSLL::VEC (GRID:MAKE-FOREIGN-ARRAY 'DOUBLE-FLOAT :INITIAL-CONTENTS '(-39.66d0 -49.46d0 19.68d0 -5.55d0))))
  (MULTIPLE-VALUE-BIND (GSLL::MATRIX GSLL::PERM)
      (GSLL:LU-DECOMPOSITION GSLL::MATRIX)
    (LET ((GSLL::X (GSLL:LU-SOLVE GSLL::MATRIX GSLL::VEC GSLL::PERM)))
      (GRID:COPY-TO
       (GSLL:PERMUTE-INVERSE
	GSLL::PERM
	(GSLL:MATRIX-PRODUCT-TRIANGULAR GSLL::MATRIX
					(GSLL:MATRIX-PRODUCT-TRIANGULAR GSLL::MATRIX GSLL::X 1 :UPPER :NOTRANS :NONUNIT)
					1 :LOWER :NOTRANS :UNIT))))))
  
  (LET ((GSLL::MATRIX
	 (GRID:MAKE-FOREIGN-ARRAY '(COMPLEX DOUBLE-FLOAT) :INITIAL-CONTENTS
				  '((-34.5d0 8.24d0 3.29d0 -8.93d0 34.12d0 -6.15d0 49.27d0 -13.49d0)
				    (34.12d0 -6.15d0 49.27d0 -13.49d0 32.5d0 42.73d0 -17.24d0 43.31d0)
				    (32.5d0 42.73d0 -17.24d0 43.31d0 -16.12d0 -8.25d0 21.44d0 -49.08d0)
				    (-16.12d0 -8.25d0 21.44d0 -49.08d0 -39.66d0 -49.46d0 19.68d0 -5.55d0))))
	(GSLL::VEC
	 (GRID:MAKE-FOREIGN-ARRAY
	  '(COMPLEX DOUBLE-FLOAT)
	  :INITIAL-CONTENTS
	  '(-39.66d0 -49.46d0 19.68d0 -5.55d0 -8.82d0 25.37d0 -30.58d0 31.67d0))))
    (MULTIPLE-VALUE-BIND (GSLL::MATRIX GSLL::PERM)
	(GSLL:LU-DECOMPOSITION GSLL::MATRIX)
      (LET ((GSLL::X (GSLL:LU-SOLVE GSLL::MATRIX GSLL::VEC GSLL::PERM)))
	(GRID:COPY-TO
	 (GSLL:PERMUTE-INVERSE GSLL::PERM
			       (GSLL:MATRIX-PRODUCT-TRIANGULAR GSLL::MATRIX
							       (GSLL:MATRIX-PRODUCT-TRIANGULAR
								GSLL::MATRIX
								GSLL::X 1 :UPPER
								:NOTRANS
								:NONUNIT)
							       1 :LOWER :NOTRANS
							       :UNIT))))))
